{"ast":null,"code":"var _jsxFileName = \"D:\\\\SUNDEO\\\\Documents\\\\SOFTWARE PROJECTS\\\\React\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random()*1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json(); // setTasks(tasks.map((task)=> task.id ===id ?{...task, reminder: !task.reminder}:task))\n\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : 'No Tasks To Show', /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/SUNDEO/Documents/SOFTWARE PROJECTS/React/task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","Footer","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(()=>{\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  //Add Task\n  const addTask = async(task) => {\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random()*1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async(id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  //Toggle Reminder\n  const toggleReminder = async(id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder:!taskToToggle.reminder}\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    // setTasks(tasks.map((task)=> task.id ===id ?{...task, reminder: !task.reminder}:task))\n    setTasks(tasks.map((task)=> task.id ===id ?{...task, reminder: data.reminder}:task))\n  }\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle = {toggleReminder}/>) : 'No Tasks To Show'\n      }\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}