{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f6fb77.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button className = 'btn' style = {{backgroundColor: color}} onClick = {onClick}>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n    return (\r\n        <div>\r\n            <header className='header'>\r\n                <h1>{title}</h1>\r\n                {location.pathname === '/' && (\r\n                    <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n                )}\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\n//CSS styling\r\n\r\n// const headingStyle = {\r\n//     color: 'red', \r\n//     backgroundColor: 'black'\r\n// }\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa';\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder? 'reminder' :''}`} onDoubleClick = {()=> onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style = {{color: 'red', cursor: 'pointer'}} onClick = {() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task, index)=>(<Task key = {index} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className = 'add-form' onSubmit = {onSubmit}>\r\n            <div className = 'form-control'>\r\n                <label>Task</label>\r\n                <input type = 'text' placeholder = 'Add Task' value = {text} onChange = {(e)=> setText(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control'>\r\n                <label>Day & Time</label>\r\n                <input type = 'text' placeholder = 'Add Day & Time' value = {day} onChange = {(e)=> setDay(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n                <label>Add Reminder</label>\r\n                <input type = 'checkbox' checked = {reminder} value = {reminder} onChange = {(e)=> setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to = '/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to = '/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random()*1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    // setTasks(tasks.map((task)=> task.id ===id ?{...task, reminder: !task.reminder}:task))\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n\n        <Route path='/' exact render={() => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : 'No Tasks To Show'\n            }\n          </>\n        )} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}